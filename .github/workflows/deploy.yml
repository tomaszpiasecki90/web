name: CI-CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} # ghcr.io/owner/repo

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:dev -t $REGISTRY/$IMAGE_NAME:${{ github.sha }} .
      - name: Push
        run: |
          docker push $REGISTRY/$IMAGE_NAME:dev
          docker push $REGISTRY/$IMAGE_NAME:${{ github.sha }}

  deploy-dev:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with: { version: 'latest' }
      - name: Write kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG_DEV }}" > kubeconfig
          chmod 600 kubeconfig
      - name: Kustomize apply (dev)
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
        run: |
          kubectl apply -k k8s/overlays/dev
          kubectl rollout status deploy/web-dev

  release-and-deploy-prod:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Retag prod
        run: |
          docker pull $REGISTRY/$IMAGE_NAME:${{ github.sha }}
          docker tag  $REGISTRY/$IMAGE_NAME:${{ github.sha }} $REGISTRY/$IMAGE_NAME:prod
          docker push $REGISTRY/$IMAGE_NAME:prod
      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
      - name: Write kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG_PROD }}" > kubeconfig
          chmod 600 kubeconfig
      - name: Kustomize apply (prod)
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
        run: |
          kubectl apply -k k8s/overlays/prod
          kubectl rollout status deploy/web-prod
